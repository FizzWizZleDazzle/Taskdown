name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Build project
      run: npm run build
      
    - name: Test CLI functionality
      run: |
        npm run parse -- parse example.md > /dev/null
        npm run parse -- roundtrip example.md > /dev/null
        echo "CLI tests passed"

  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('backend/Cargo.lock') }}
        
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('backend/Cargo.lock') }}
        
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: backend/target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('backend/Cargo.lock') }}

    - name: Run backend tests
      run: |
        cd backend
        cargo test
        
    - name: Run backend linter
      run: |
        cd backend
        cargo clippy -- -D warnings
        
    - name: Check backend formatting
      run: |
        cd backend
        cargo fmt --check
        
    - name: Build backend
      run: |
        cd backend
        cargo build --release

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check TypeScript compilation
      run: npx tsc --noEmit
      
    - name: Check for unused dependencies
      run: |
        # Basic check for potential issues
        echo "TypeScript compilation successful"